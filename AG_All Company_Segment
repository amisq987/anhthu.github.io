from pyspark.sql.functions import col, when, concat, lit, sum as _sum

# Step 1: Enrich adprofile
adprofile_enriched_df = adprofile_filtered_df \
    .filter(col("AGSegName") != "Termination") \
    .withColumn(
        "segment_final",
        when(col("AGSegName") == "SA", "SA")
        .when((col("AGSegName").isin("Gold", "Platinum", "Diamond")) & (col("MonthOfService") <= 12), "New PE")
        .when((col("AGSegName").isin("Gold", "Platinum", "Diamond")) & (col("MonthOfService") > 12), col("AGSegName"))
        .when((col("MonthOfService").between(0, 12)), concat(lit("M"), col("MonthOfService").cast("string")))
        .otherwise("M13+")
    )

# Step 2: Join adstructure for Agency territories
adstructure_selected_df = adstructure_filtered_df.select("YearMonth", "ADStrucCode1", "OfficeCode")

agency_df = adprofile_enriched_df.filter(col("AGChannel") == "Agency") \
    .join(adstructure_selected_df, ["YearMonth", "OfficeCode"], "left") \
    .withColumn("Territory", col("ADStrucCode1")) \
    .join(prodtrans_agg_df, "AGCode", "left") \
    .withColumn("Manpower", lit(1)) \
    .withColumn("Active_net", when(col("Case") > 0, 1).otherwise(0)) \
    .withColumn("Active_IP_15", when(col("Case_IP_15_excl_digital") > 0, 1).otherwise(0))

# Step 3: Get existing territories from Agency
existing_territory_list = [row.Territory for row in agency_df.select("Territory").distinct().collect()]

# Step 4: Process Gallerie profiles with new GL territories
gallerie_df = adprofile_enriched_df.filter(col("AGChannel") == "Gallerie") \
    .join(glstructure_filtered_df.select("GL_StrucCode1", "OfficeCode"), "OfficeCode", "inner") \
    .join(prodtrans_agg_df, "AGCode", "left") \
    .withColumn(
        "Territory",
        when(~col("GL_StrucCode1").isin(existing_territory_list), "GAL").otherwise(col("GL_StrucCode1"))
    ) \
    .withColumn("Manpower", lit(1)) \
    .withColumn("Active_net", when(col("Case") > 0, 1).otherwise(0)) \
    .withColumn("Active_IP_15", when(col("Case_IP_15_excl_digital") > 0, 1).otherwise(0))

# Step 5: Union Agency and Gallerie datasets
combined_df = agency_df.unionByName(gallerie_df)

# Step 6: Aggregate
AG_All_Company_Segments = combined_df.groupBy(
    "AGChannel", "YearMonth", "Territory", "OfficeCode", "segment_final"
).agg(
    _sum("APE").alias("APE"),
    _sum("Manpower").alias("Manpower"),
    _sum("Active_net").alias("Active_net"),
    _sum("Active_IP_15").alias("Active_IP_15"),
    _sum("Case").alias("Case"),
    _sum("Case_IP_15_excl_digital").alias("Case_IP_15_excl_digital")
)

# Step 7: Display
AG_All_Company_Segments.orderBy("AGChannel", "YearMonth", "Territory", "OfficeCode", "segment_final").display()
